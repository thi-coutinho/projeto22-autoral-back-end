generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique @db.VarChar(255)
  password  String      @db.VarChar(255)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  FirstIdea FirstIdea[]
  Project   Project[]
}

model Project {
  id        Int       @id @default(autoincrement())
  userId    Int
  name      String
  objective String?
  imageURL  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Element   Element[]
  User      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Element {
  id        Int         @id @default(autoincrement())
  projectId Int
  Type      ElementType
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Project   Project     @relation(fields: [projectId], references: [id], onDelete: Cascade)
  Property  Property[]
}

model Property {
  id        Int      @id @default(autoincrement())
  name      String
  value     String
  Element   Element  @relation(fields: [elementId], references: [id], onDelete: Cascade)
  elementId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([name, elementId])
}

model FirstIdea {
  id        Int        @id @default(autoincrement())
  userId    Int
  idea      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  AiOutput  AiOutput[]
  User      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model AiOutput {
  id         Int        @id @default(autoincrement())
  inputId    Int
  typeId     Int
  outputText String
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  FirstIdea  FirstIdea  @relation(fields: [inputId], references: [id], onDelete: Cascade)
  OutputType OutputType @relation(fields: [typeId], references: [id], onDelete: Cascade)
}

model OutputType {
  id        Int        @id @default(autoincrement())
  type      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  AiOutput  AiOutput[]
}

enum ElementType {
  Arrow
  Box
  Text
  Line
}
